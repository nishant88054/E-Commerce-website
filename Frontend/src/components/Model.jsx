/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 shoe.glb --transform
Files: shoe.glb [35.36MB] > .\Frontend\public\shoe-transformed.glb [2.62MB] (93%)  
Author: Isaiah (https://sketchfab.com/aizaisia)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/new-balance-997-05e79a2dffbc4356bba7e0751fada08f
Title: New Balance 997
*/

import { useEffect, useRef, useState } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber';
import * as THREE from 'three';

export function Model(props) {
  const shoeRef = useRef(null);
  const { nodes, materials } = useGLTF('/shoe-transformed.glb')
  const [scale, setScale] = useState(window.innerWidth >= 592 && window.innerWidth < 1440 ? 0.012 :0.008);
  useEffect(() => {
    const handleResize = () => {
      if ((window.innerWidth < 592 || window.innerWidth >= 1440) && scale !== 0.008){
        setScale(0.008);
      }
      else if(window.innerWidth >=592 && window.innerWidth < 1440 && scale !== 0.012) {
        setScale(0.012);
      }
    };

    window.addEventListener("resize", handleResize);

    return () => {
      window.removeEventListener("resize", handleResize); // Cleanup
    };
  }, [scale]);
  useEffect(() => {
    if (shoeRef.current) {
      // Initial rotation with YXZ order
      const initialQuaternion = new THREE.Quaternion();
      initialQuaternion.setFromEuler(new THREE.Euler(0, -Math.PI / 2, 0, "YXZ"));
      shoeRef.current.quaternion.copy(initialQuaternion)
      shoeRef.current.position.y = -2
    }
  }, []);
  useFrame(({ clock }) => {
    const t = clock.getElapsedTime();
    shoeRef.current.position.y = -1.4 + Math.sin(t) * - 0.2
  });
  return (
    <group {...props} dispose={null} scale ={[scale,scale,scale]} ref={shoeRef} >
      <mesh geometry={nodes.Shoe_set_02_Sole_0.geometry} material={materials.Sole} position={[0, 113.825, 10.774]} rotation={[-Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.Shoe_set_02_Outer_0.geometry} material={materials.Outer} position={[0, 113.825, 10.774]} rotation={[-Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.Shoe_set_02_Laces_0.geometry} material={materials.Laces} position={[0, 113.825, 10.774]} rotation={[-Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.Shoe_set_02_Inner_0.geometry} material={materials.Inner} position={[0, 113.825, 10.774]} rotation={[-Math.PI / 2, 0, 0]} />
    </group>
  )
}

useGLTF.preload('/shoe-transformed.glb')